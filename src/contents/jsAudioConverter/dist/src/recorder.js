let AudioContext=window.AudioContext||window.webkitAudioContext;window.Recorder=function(e,o){Recorder.isRecordingSupported()?(e||(e={}),this.config=Object.assign({bufferLength:4096,mediaTrackConstraints:!0,monitorGain:0,numberOfChannels:1,recordingGain:1,reuseWorker:!1,workerPath:"",encoderType:"",encoderApplication:2049,encoderFrameSize:20,desiredSampleRate:8e3,originalSampleRateOverride:16e3,maxFramesPerPage:40,resampleQuality:9,bitsPerSample:16},e),console.log("Recorder config: ",JSON.stringify(this.config,null,"    ")),this.state="inactive",this.recording=!1,this.fileName=null,this.audioContext=null,this.recoderOptions=o,this.stream=null,this.recordingDuration=o.recordingDuration||30,this.fadeOutEnabled=void 0===o.audioFadeOut||o.audioFadeOut,this.fadeOutBeenSet=!1,this.gainFadeOutTime=.25*this.recordingDuration,this.recorderStopHandler=null):console.error("AudioContext or WebAssembly is not supported")},Recorder.ERROR_MESSAGE={ERROR_CODE_1001:{responseCode:"INVALID_PARAMETER",message:"Invalid parameter"},ERROR_CODE_1002:{responseCode:"AUDIOCONTEXT_NOT_SUPPORTED",message:"AudioContext is not supported !"},ERROR_CODE_1003:{responseCode:"WEBASSEMBLY_NOT_SUPPORTED",message:"WebAssembly not supported !"},ERROR_CODE_1004:{responseCode:"FILE_OVERSIZE",message:"File size requirement does not exceed 9M !"},ERROR_CODE_1005:{responseCode:"MIN_TIME_NOT_SATISFIED",message:"File playing time does not reach the required minimum (3 second)"},ERROR_CODE_1006:{responseCode:"ONLY_AUDIO_SUPPORTED",message:"Only audio is supported!"},ERROR_CODE_1007:{responseCode:"BROWSER_CONVERSION_NOT_SUPPORTED",message:"Audio conversion is not supported in current browser!"},ERROR_CODE_1008:{responseCode:"FORMAT_CONVERSION_ERROR",message:"CONVERSION ERROR: unable to decode audio data!"},ERROR_CODE_1009:function(e){return{responseCode:"UNKNOWN_ERROR",message:"CONVERSION ERROR: "+e||"unknown error"}}},Recorder.isRecordingSupported=function(){return AudioContext&&window.WebAssembly},Recorder.prototype.clearStream=function(){this.stream&&(this.stream.getTracks?this.stream.getTracks().forEach((function(e){e.stop()})):this.stream.stop(),delete this.stream),this.audioContext&&this.closeAudioContext&&(this.audioContext.close(),delete this.audioContext)},Recorder.prototype.setRecordingDuration=function(e){e&&(this.recordingDuration=e,this.gainFadeOutTime=.25*this.recordingDuration,console.log("set recording duration, "+e))},Recorder.prototype.setRecordingGain=function(e){this.config.recordingGain=e,this.recordingGainNode&&this.audioContext&&this.recordingGainNode.gain.setTargetAtTime(e,this.audioContext.currentTime,.01)},Recorder.prototype.setMonitorGain=function(e){this.config.monitorGain=e,this.monitorGainNode&&this.audioContext&&this.monitorGainNode.gain.setTargetAtTime(e,this.audioContext.currentTime,.01)},Recorder.prototype.setRecordingGainFadeOut=function(e){console.log("set recording gain fade out, time left "+e),this.recordingGainNode&&this.audioContext&&(this.recordingGainNode.gain.setValueAtTime(1,this.audioContext.currentTime),this.recordingGainNode.gain.linearRampToValueAtTime(.01,this.audioContext.currentTime+e))},Recorder.prototype.encodeBuffers=function(e){if("recording"===this.state){let o=[];for(let t=0;t<e.numberOfChannels;t++)o.push(e.getChannelData(t));this.worker.postMessage({command:"encode",buffers:o})}},Recorder.prototype.initAudioContext=function(e){return e&&e.context?(this.audioContext=e.context,this.closeAudioContext=!1):(this.audioContext=new AudioContext,this.closeAudioContext=!0),this.audioContext},Recorder.prototype.initAudioGraph=function(){let e=this;this.encodeBuffers=function(){delete this.encodeBuffers},this.scriptProcessorNode=this.audioContext.createScriptProcessor(this.config.bufferLength,this.config.numberOfChannels,this.config.numberOfChannels),this.scriptProcessorNode.connect(this.audioContext.destination);let o=0,t=0,r=0;this.scriptProcessorNode.onaudioprocess=function(i){if(!e.recording)return void console.warn("onaudioprocess recording false!!");t||(t=i.inputBuffer.duration,console.log("get onaudioprocess trigger duration: "+t)),o++,e.encodeBuffers(i.inputBuffer),r=o*t;let n=e.recordingDuration-r;n>0?(e.recorderStopHandler&&e.recorderStopHandler({state:"running",totalDuration:r}),e.fadeOutEnabled&&!e.fadeOutBeenSet&&(n<=e.gainFadeOutTime||e.fadeOutTime)&&(console.warn("set audio fade out"),e.fadeOutTime&&(n=t*e.remainingTimes,console.log("audioprocessTotalDuration:",r),console.log("This.remainingTimes:",e.remainingTimes),console.log("timeLeft:",n)),e.setRecordingGainFadeOut(n),e.fadeOutBeenSet=!0)):(console.log("process count: ",o),console.log("audio process total duration: ",r),e.recorderStopHandler&&e.recorderStopHandler({state:"stop"}))},this.monitorGainNode=this.audioContext.createGain(),this.setMonitorGain(this.config.monitorGain),this.monitorGainNode.connect(this.audioContext.destination),this.recordingGainNode=this.audioContext.createGain(),this.setRecordingGain(this.config.recordingGain),this.recordingGainNode.connect(this.scriptProcessorNode)},Recorder.prototype.initSourceNode=function(e){return e&&e.context?window.Promise.resolve(e):null},Recorder.prototype.loadWorker=function(){this.worker||(this.worker=new Worker(this.config.workerPath))},Recorder.prototype.initWorker=function(){let e=this;return this.recordedPages=[],this.totalLength=0,this.loadWorker(),new Promise(((o,t)=>{let r=i=>{switch(i.data.message){case"ready":console.log("worker ready!"),o({message:i.data.message});break;case"wasmFetchError":console.error("Wasm file Fetch error, reason: ",i.data.reason),t(i.data.reason);break;case"page":this.storePage(i.data.page);break;case"done":this.worker.removeEventListener("message",r),e.finish(i.data.data);break;case"fadeOutTime":e.fadeOutTime=!0,e.remainingTimes=i.data.remainingTimes;break;case"fileExceedsLimit":e.recorderStopHandler&&e.recorderStopHandler({state:"stop",fileExceedsLimit:!0});break;default:console.warn("worker e.data.command:",i.data.message)}};this.worker.addEventListener("message",r),this.worker.postMessage(Object.assign({command:"init",originalSampleRate:this.audioContext.sampleRate,wavSampleRate:this.audioContext.sampleRate,fileSizeLimit:!0},this.config))}))},Recorder.prototype.init=function(e,o,t){let r=this;if("inactive"===this.state)return this.recording=!0,this.state="recording",this.recorderStopHandler=o,this.initAudioContext(e),Promise.all([this.initSourceNode(e),this.initWorker()]).then((e=>{e[0]?(t&&t(),this.sourceNode=e[0]):r.recoderOptions&&r.recoderOptions.errorCallBack(Recorder.ERROR_MESSAGE.ERROR_CODE_1008)})).catch((function(e){r.recoderOptions&&r.recoderOptions.errorCallBack&&r.recoderOptions.errorCallBack(Recorder.ERROR_MESSAGE.ERROR_CODE_1009(e))}))},Recorder.prototype.start=function(){let e=this;try{this.initAudioGraph(),this.onstart(),this.worker.postMessage({command:"getHeaderPages"}),this.sourceNode.connect(this.monitorGainNode),this.sourceNode.connect(this.recordingGainNode)}catch(o){e.recoderOptions&&e.recoderOptions.errorCallBack&&e.recoderOptions.errorCallBack(Recorder.ERROR_MESSAGE.ERROR_CODE_1009(o))}},Recorder.prototype.stop=function(){let e=this;if("inactive"!==this.state){this.state="inactive",this.recording=!1,this.monitorGainNode&&this.monitorGainNode.disconnect(),this.scriptProcessorNode&&this.scriptProcessorNode.disconnect(),this.recordingGainNode&&this.recordingGainNode.disconnect(),this.sourceNode&&this.sourceNode.disconnect(),this.clearStream();let o=this.worker;if(o)return new Promise((e=>{let t=r=>{"done"===r.data.message&&(o.removeEventListener("message",t),e())};o.addEventListener("message",t),o.postMessage({command:"done"}),this.config.reuseWorker||o.postMessage({command:"close"})}));e.recoderOptions&&e.recoderOptions.errorCallBack&&e.recoderOptions.errorCallBack(Recorder.ERROR_MESSAGE.ERROR_CODE_1009())}return Promise.resolve()},Recorder.prototype.storePage=function(e){this.recordedPages.push(e),this.totalLength+=e.length},Recorder.prototype.finish=function(e){!e&&this.recordedPages&&this.recordedPages.length&&(e=new Uint8Array(this.totalLength),this.recordedPages.reduce((function(o,t){return e.set(t,o),o+t.length}),0)),this.ondataavailable(e),this.onstop(),this.config.reuseWorker||delete this.encoder},Recorder.prototype.ondataavailable=function(){},Recorder.prototype.onpause=function(){},Recorder.prototype.onresume=function(){},Recorder.prototype.onstart=function(){},Recorder.prototype.onstop=function(){},Recorder.getBrowserDetails=function(){let e=window&&window.navigator,o={browser:null,version:null,chromeVersion:null},t=function(e,o,t){var r=e.match(o);return r&&r.length>=t&&parseInt(r[t],10)};switch(o.browser=function(){let t;return e.userAgent.match(/Edge\/(\d+).(\d+)$/)?(console.log("Edge"),t="edge"):e.userAgent.indexOf("Firefox")>-1?(console.log("Firefox"),t="firefox"):e.userAgent.indexOf("Opera")>-1||e.userAgent.indexOf("OPR")>-1?(console.log("opera"),t="Opera"):e.userAgent.indexOf("Chrome")>-1&&e.userAgent.indexOf("Safari")>-1&&-1===e.userAgent.indexOf("Edge")&&-1===e.userAgent.indexOf("OPR")?(console.log("Chrome"),t="chrome"):e.userAgent.indexOf("Safari")>-1&&-1===e.userAgent.indexOf("Chrome")&&-1===e.userAgent.indexOf("Edge")&&-1===e.userAgent.indexOf("OPR")?(console.log("Safari"),t="safari"):e.userAgent.match(/AppleWebKit\/([0-9]+)\./)&&e.userAgent.match(/Version\/(\d+).(\d+)/)?(console.log("Safari"),o.browser="safari"):e.userAgent.indexOf("compatible")>-1&&e.userAgent.indexOf("MSIE")>-1||e.userAgent.indexOf("Trident")>-1&&e.userAgent.indexOf("rv:11.0")>-1?(console.log("IE"),t="ie"):console.log("navigator.userAgent: ",e.userAgent),t}(),o.browser){case"chrome":o.version=t(e.userAgent,/Chrom(e|ium)\/(\d+)\./,2);break;case"opera":o.version=t(e.userAgent,/O(PR|pera)\/(\d+)\./,2),e.userAgent.match(/Chrom(e|ium)\/([\d.]+)/)[2]&&(o.chromeVersion=t(e.userAgent,/Chrom(e|ium)\/(\d+)\./,2));break;case"firefox":o.version=t(e.userAgent,/Firefox\/(\d+)\./,1);break;case"edge":o.version=t(e.userAgent,/Edge\/(\d+).(\d+)$/,2);break;case"safari":o.version=t(e.userAgent,/AppleWebKit\/(\d+)\./,1);break;case"ie":e.userAgent.match(/MSIE (\d+)/)?o.version=t(e.userAgent,/MSIE (\d+).(\d+)/,1):e.userAgent.match(/rv:(\d+)/)&&(o.version=t(e.userAgent,/rv:(\d+).(\d+)/,1))}return console.log("getBrowserDetails",o),o};